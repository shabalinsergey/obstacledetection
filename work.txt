Методические указания к выполнению Лабораторной работы. 

Лабораторная работа.

Определение глубины изображения, поиск препятствий, вычисление расстояния до найденных объектов по двум стереоизображениям. 

Цель лабораторной работы - получение информации о препятствиях и расчет расстояния до них по данным, получаемым в процессе обработки двух стереоизображений. 

Этапы обработки изображения. 

1. Калибровка камеры, получение матрицы искажений оптической системы.
2. Устранение искажений двух стереоизображений.
3. Получение карты глубин изображения.
4. Фильтрация карты глубин.
5. Поиск объектов.
6. Вычисление расстояний до найденных объектов. 


Описание программы для выполнения лабораторной работы. 

Программа состоит из четырех файлов: 

main.py - основной алгоритм программы; вызов функций, описанных в прочих файлах. 
calibration.py - функция для получения матрицы искажений оптической системы
rectifying.py - функция для устранения искажений двух стереоизображений
depth_calculating.py - фукнция для получения карты глубин, функция для поиска объектов на изображении, фукнция расчета расстояний до найденных объектов
			функция для вывода результатов обработки на исходном изображении 

В файле main.py прописаны пути до изображений:
 
image_left_path ='./images/LeftImage_name.jpg' (1)
image_right_path='./images/RightImage_name.jpg' (2)
images_for_calibrating_path= './chessboard/*.jpg' (3)

Ход выполнения лабораторной работы


1. Необходимо сделать набор фотографий (около 10 шт) шахматной доски под всевозможными углами с помощью камеры, 
которая будет использоваться для проведения лабораторной работы.  

Это нужно для того, чтобы получить матрицу искажений оптической системы (изображения с камеры имеют искажения по углам) 
для устранения искажений и приведения изображения к истинному 2D виду.

Изображение калибровочной шахматной доски лежит в каталоге '//...' с именем '...jpg'

2. Положить полученные изображения шахматной доски под разными углами в каталог './chessboard/.' с именами '1.jpg', '2.jpg', ..., 'n-1.jpg','n.jpg'.

В файле main.py прописан путь до этих изображений: images_for_calibrating_path= './chessboard/*.jpg'

3. Сделать два снимка с камеры со смещением 10 см в направлении, перпендикулярном оптической оси камеры (имитация стереозрения). 

Поместить снимки в каталог

'./images/LeftImage_name.jpg' 
'./images/RightImage_name.jpg'

4. Провести калибровку камеры и получить матрицу искажений с помощью функции: 

DistortionMatrix = CalibrateCamera(images_for_calibrating_path)

Функция возвращает матрицу искажений, которая используется далее для устранения искажений. 

5. Устранить искажения камеры на двух полученных ранее стереоизображениях: 

imgR_rectified = GetUndistortedImage(image_right_path, DistortionMatrix)
imgL_rectified = GetUndistortedImage(image_left_path, DistortionMatrix)


6. Получить карту глубины изображения filteredDisparity по стереоизображениям без искажений с помощью функции 

disparity_left, disparity_right, filteredDisparity = GetDisparityMap(imgL_rectified, imgR_rectified)
        
disparity_left, disparity_right нужны для ???

7. Провести анализ полученной карты глубин на предмет наличия препятствий и объектов. 


Необходимо написать функцию FindAnObstacle(filteredDisparity,output_image), которая будет выполнять обработку карты глубин (filteredDisparity). 

Функция должна выполнять задачу поиска объектов на изображении и возвращать массив object_centers, который содержит центры объектов [(X1,Y1),(X2,Y2),...,(Xn-1,Yn-1),(Xn,Yn)]

Также функция должна "рисовать" на изображении output_image контуры найденных объектов. 


8. 




